;;; Automatically generated on Wed Mar 20 20:36:00 2013
;;; Invoked by shuhei@fakeit.local using 24.3.1
(setq-default session-file-alist '(("~/Dropbox/dotfiles/dot.emacs.d/init.el" 3733 1 1 nil nil 3733 (overwrite-mode)) ("~/github/mina-railsapp/lib/mina/railsapp/logrotate.rb" 64 33 1 nil nil 61 (overwrite-mode)) ("~/Dropbox/dotfiles/dot.emacs.d/site-lisp/ruby-mode.el" 34509 34518 1 nil nil 34518 (overwrite-mode)) ("~/Dropbox/dotfiles/dot.emacs.d/ruby.el" 1626 1484 1 nil nil 1596 (overwrite-mode)) ("~/Dropbox/dotfiles/dot.emacs.d/modes.el" 4314 4314 1 nil nil 4314 (overwrite-mode)) ("~/github/mina-railsapp/lib/mina/railsapp/nginx.rb" 774 293 1 nil nil 910 (overwrite-mode)) ("~/github/mina-railsapp/lib/mina/railsapp/unicorn.rb" 437 115 1 nil nil 318 (overwrite-mode)) ("~/github/mina-railsapp/templates/nginx-site.conf.erb" 225 475 1 nil nil 525 (overwrite-mode)) ("~/github/TogoGenome/config/deploy.rb" 124 96 1 nil nil 124 (overwrite-mode)) ("~/github/mina-railsapp/templates/unicorn.rb.erb" 122 102 1 nil nil 122 (overwrite-mode)) ("~/github/mina-railsapp/mina-railsapp.gemspec" 580 433 1 nil nil 460 (overwrite-mode)) ("~/github/TogoGenome/Gemfile" 797 762 1 nil nil 797 (overwrite-mode)) ("~/github/TogoGenome/config/unicorn.rb" 1535 1 1 nil nil 828 (overwrite-mode)) ("~/Dropbox/environments/macosx/app/chrome/plugins.txt" 306 293 1 nil nil 480 (overwrite-mode)) ("~/tmp/togogenome.nginx.2" 671 1 1 nil nil 672 (overwrite-mode)) ("~/tmp/togogenome.nginx" 504 463 1 nil nil 214 (overwrite-mode)) ("~/tmp/togogenome.nginx.1" 479 1 1 nil nil 480 (overwrite-mode)) ("~/github/TogoGenome/app/assets/stylesheets/application.css.sass" 277 883 1 nil nil 277 (overwrite-mode)) ("~/github/TogoGenome/app/views/facets/_facet.html.haml" 3088 3365 1 nil nil 2505 (overwrite-mode)) ("~/github/TogoGenome/app/helpers/facets_helper.rb" 88 28 1 nil nil 88 (overwrite-mode)) ("~/github/TogoGenome/lib/tasks/facet.thor" 6581 3850 1 nil nil 6581 (overwrite-mode)) ("~/github/TogoGenome/app/views/root/index.html.haml" 1557 1561 1 nil nil 1557 (overwrite-mode)) ("~/github/TogoGenome/app/controllers/proteins_controller.rb" 220 219 1 nil nil 220 (overwrite-mode)) ("~/github/TogoGenome/config/database.yml" 330 1 1 nil nil 330 (overwrite-mode)) ("~/github/TogoGenome/Gemfile.lock" 2591 2591 1 nil nil 2591 (overwrite-mode)) ("~/Dropbox/dotfiles/dot.emacs.d/look_and_feel.el" 865 nil 1 nil nil 865 (overwrite-mode)) ("~/github/TogoGenome/app/assets/javascripts/application.js.coffee" 260 325 1 nil nil 260 (overwrite-mode)) ("~/Dropbox/dotfiles/dot.emacs.d/auto-install/anything-grep.el" 1 nil 1 nil nil 17834 (overwrite-mode)) ("~/Dropbox/dotfiles/dot.emacs.d/auto-install/anything-migemo.el" 1 nil 1 nil nil 14506 (overwrite-mode)) ("~/Dropbox/dotfiles/dot.emacs.d/auto-install/anything-config.el" 1 nil 1 nil nil 524314 (overwrite-mode)) ("~/github/TogoGenome/app/models/environment_taxonomy_relation.rb" 751 293 1 nil nil 458 (overwrite-mode)) ("~/github/TogoGenome/lib/tasks/sparql/environment_taxonomy.sparql" 166 1 1 nil nil 389 (overwrite-mode)) ("~/github/TogoGenome/db/migrate/20130228050358_create_environment_taxonomy_relations.rb" 202 nil 1 nil nil 202 (overwrite-mode))))
(setq-default file-name-history '("~/Dropbox/dotfiles/dot.emacs.d/init.el" "~/github/mina-railsapp/lib/mina/railsapp/nginx.rb" "~/github/mina-railsapp/lib/mina/railsapp/logrotate.rb" "~/Dropbox/dotfiles/dot.emacs.d/site-lisp/ruby-mode.el" "~/Dropbox/dotfiles/dot.emacs.d/ruby.el" "~/Downloads/ruby-2.0.0-p0/misc/ruby-electric.el" "~/Downloads/ruby-2.0.0-p0/misc/ruby-mode.el" "~/Dropbox/dotfiles/dot.emacs.d/modes.el" "~/.emacs.d/init.el" "~/github/mina-railsapp/lib/mina/railsapp/unicorn.rb" "~/github/mina-railsapp/templates/nginx-site.conf.erb" "~/github/mina-railsapp/mina-railsapp.gemspec" "~/github/mina-railsapp/templates/unicorn.rb.erb" "~/github/TogoGenome/config/deploy.rb" "~/github/TogoGenome/Gemfile" "~/github/mina-railsapp/templates" "~/github/TogoGenome/config/unicorn.rb" "~/Dropbox/environments/macosx/app/chrome/plugins.txt" "~/tmp/togogenome.nginx.2" "~/tmp/togogenome.nginx.1" "~/tmp/togogenome.nginx" "~/github/TogoGenome/app/helpers/facets_helper.rb" "~/github/TogoGenome/app/views/facets/_facet.html.haml" "~/github/TogoGenome/lib/tasks/facet.thor" "~/github/TogoGenome/app/assets/stylesheets/application.css.sass" "~/github/TogoGenome/app/views/proteins/_results.html.haml" "~/github/TogoGenome/app/views/root/index.html.haml" "~/github/TogoGenome/app/controllers/proteins_controller.rb" "~/github/TogoGenome/config/database.yml" "~/github/TogoGenome/config/database.yml.sample" "~/github/TogoGenome/Gemfile.lock" "~/github/TogoGenome/lib/tasks/protein.thor" "~/github/TogoGenome/lib/tasks/data.thor" "~/github/TogoGenome/app/models/protein.rb" "~/Dropbox/dotfiles/dot.emacs.d/look_and_feel.el" "~/github/TogoGenome/config/unicorn/production.rb" "~/github/TogoGenome/" "~/github/TogoGenome/togogenome" "~/github/TogoGenome/app/assets/javascripts/application.js.coffee" "~/github/TogoGenome/config/environments/development.rb" "~/github/TogoGenome/config/environment.rb" "~/github/TogoGenome/app/models/facet.rb" "~/Dropbox/dotfiles/dot.emacs.d/auto-install/anything-grep.el" "~/Dropbox/dotfiles/dot.emacs.d/auto-install/anything-migemo.el" "~/Dropbox/dotfiles/dot.emacs.d/auto-install/anything-config.el" "~/tmp/eiji_conv/eiji_conv.rb" "~/tmp/eiji_conv/cat.rb" "~/tmp/eiji_conv/MyDictionary.css" "~/tmp/eiji_conv/Makefile" "~/tmp/eiji_conv/ryaku_conv.rb" "~/github/TogoGenome/lib/tasks/sparql/gene_ontology.sparql" "~/github/TogoGenome/app/models/environment_taxonomy_relation.rb" "~/github/TogoGenome/app/models/convertable.rb" "~/github/TogoGenome/lib/tasks/sparql/environment_taxonomy.sparql" "~/github/TogoGenome/db/migrate/20130228050358_create_environment_taxonomy_relations.rb"))
(setq-default search-ring '("visible" "paren" "last-comm" "electric" "autoload" "require" "elec" "ele" "ruby" "server" "app" "tmp" "user" "trigger" "settlement" "toggle_clear"))
(setq-default anything-c-source-complete-shell-history '((name . "Shell History") (init lambda nil (require \.\.\.) (with-current-buffer \.\.\. \.\.\. \.\.\.)) (get-line . acsh-get-line) (search-from-end) (type . complete)))
(setq-default anything-c-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar \.\.\. command-history)) (type . sexp)))
(setq-default anything-c-source-eshell-history '((name . "Eshell history") (init lambda nil (let \.\.\. \.\.\. \.\.\.) (remove-hook \.\.\. \.\.\.)) (candidates-in-buffer) (keymap keymap (27 keymap \.\.\.) keymap (23 . anything-yank-text-at-point) (24 keymap \.\.\.) (help keymap \.\.\.) (8 keymap \.\.\.) (f1 keymap \.\.\.) (3 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (67108987 . anything-enlarge-window) (67108989 . anything-narrow-window) (20 . anything-toggle-resplit-window) (18 . undefined) (11 . anything-delete-minibuffer-contents) (67108896 . anything-toggle-visible-mark) (C-M-up . anything-scroll-other-window-down) (C-M-down . anything-scroll-other-window) (M-prior . anything-scroll-other-window-down) (M-next . anything-scroll-other-window) (15 . anything-next-source) (5 . anything-select-2nd-action-or-end-of-line) (26 . anything-execute-persistent-action) (90 . anything-select-with-digit-shortcut) (89 . anything-select-with-digit-shortcut) (88 . anything-select-with-digit-shortcut) (87 . anything-select-with-digit-shortcut) (86 . anything-select-with-digit-shortcut) (85 . anything-select-with-digit-shortcut) (84 . anything-select-with-digit-shortcut) (83 . anything-select-with-digit-shortcut) (82 . anything-select-with-digit-shortcut) (81 . anything-select-with-digit-shortcut) (80 . anything-select-with-digit-shortcut) (79 . anything-select-with-digit-shortcut) (78 . anything-select-with-digit-shortcut) (77 . anything-select-with-digit-shortcut) (76 . anything-select-with-digit-shortcut) (75 . anything-select-with-digit-shortcut) (74 . anything-select-with-digit-shortcut) (73 . anything-select-with-digit-shortcut) (72 . anything-select-with-digit-shortcut) (71 . anything-select-with-digit-shortcut) (70 . anything-select-with-digit-shortcut) (69 . anything-select-with-digit-shortcut) (68 . anything-select-with-digit-shortcut) (67 . anything-select-with-digit-shortcut) (66 . anything-select-with-digit-shortcut) (65 . anything-select-with-digit-shortcut) (67108921 . anything-select-with-digit-shortcut) (67108920 . anything-select-with-digit-shortcut) (67108919 . anything-select-with-digit-shortcut) (67108918 . anything-select-with-digit-shortcut) (67108917 . anything-select-with-digit-shortcut) (67108916 . anything-select-with-digit-shortcut) (67108915 . anything-select-with-digit-shortcut) (67108914 . anything-select-with-digit-shortcut) (67108913 . anything-select-with-digit-shortcut) (left . anything-previous-source) (right . anything-next-source) (22 . anything-next-page) (16 . anything-previous-line) (14 . anything-next-line) (menu-bar keymap \.\.\. \.\.\.) (10 . anything-select-3rd-action) (13 . anything-exit-minibuffer) (7 . anything-keyboard-quit) (C-tab . file-cache-minibuffer-complete) (9 . anything-select-action) (up . anything-previous-line) (prior . anything-previous-page) (down . anything-next-line) (next . anything-next-page) (27 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.)) (filtered-candidate-transformer lambda (candidates sources) (reverse candidates)) (candidate-number-limit . 9999) (action lambda (candidate) (eshell-kill-input) (insert candidate))))
(setq-default anything-c-source-extended-command-history '((name . "Emacs Commands History") (candidates lambda nil (anything-fast-remove-dups extended-command-history :test \.\.\.)) (type . command)))
(setq-default anything-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (match anything-c-match-on-basename) (type . file)))
(setq-default anything-c-source-global-mark-ring '((name . "global-mark-ring") (candidates . anything-c-source-global-mark-ring-candidates) (action ("Goto line" lambda \.\.\. \.\.\.)) (persistent-action lambda (candidate) (let \.\.\. \.\.\. \.\.\. \.\.\.)) (persistent-help . "Show this line")))
(setq-default anything-c-source-kill-ring '((name . "Kill Ring") (init lambda nil (anything-attrset \.\.\. last-command)) (candidates . anything-c-kill-ring-candidates) (filtered-candidate-transformer anything-c-kill-ring-transformer) (action . anything-c-kill-ring-action) (keymap keymap (27 keymap \.\.\. \.\.\.) keymap (23 . anything-yank-text-at-point) (24 keymap \.\.\.) (help keymap \.\.\.) (8 keymap \.\.\.) (f1 keymap \.\.\.) (3 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (67108987 . anything-enlarge-window) (67108989 . anything-narrow-window) (20 . anything-toggle-resplit-window) (18 . undefined) (11 . anything-delete-minibuffer-contents) (67108896 . anything-toggle-visible-mark) (C-M-up . anything-scroll-other-window-down) (C-M-down . anything-scroll-other-window) (M-prior . anything-scroll-other-window-down) (M-next . anything-scroll-other-window) (15 . anything-next-source) (5 . anything-select-2nd-action-or-end-of-line) (26 . anything-execute-persistent-action) (90 . anything-select-with-digit-shortcut) (89 . anything-select-with-digit-shortcut) (88 . anything-select-with-digit-shortcut) (87 . anything-select-with-digit-shortcut) (86 . anything-select-with-digit-shortcut) (85 . anything-select-with-digit-shortcut) (84 . anything-select-with-digit-shortcut) (83 . anything-select-with-digit-shortcut) (82 . anything-select-with-digit-shortcut) (81 . anything-select-with-digit-shortcut) (80 . anything-select-with-digit-shortcut) (79 . anything-select-with-digit-shortcut) (78 . anything-select-with-digit-shortcut) (77 . anything-select-with-digit-shortcut) (76 . anything-select-with-digit-shortcut) (75 . anything-select-with-digit-shortcut) (74 . anything-select-with-digit-shortcut) (73 . anything-select-with-digit-shortcut) (72 . anything-select-with-digit-shortcut) (71 . anything-select-with-digit-shortcut) (70 . anything-select-with-digit-shortcut) (69 . anything-select-with-digit-shortcut) (68 . anything-select-with-digit-shortcut) (67 . anything-select-with-digit-shortcut) (66 . anything-select-with-digit-shortcut) (65 . anything-select-with-digit-shortcut) (67108921 . anything-select-with-digit-shortcut) (67108920 . anything-select-with-digit-shortcut) (67108919 . anything-select-with-digit-shortcut) (67108918 . anything-select-with-digit-shortcut) (67108917 . anything-select-with-digit-shortcut) (67108916 . anything-select-with-digit-shortcut) (67108915 . anything-select-with-digit-shortcut) (67108914 . anything-select-with-digit-shortcut) (67108913 . anything-select-with-digit-shortcut) (left . anything-previous-source) (right . anything-next-source) (22 . anything-next-page) (16 . anything-previous-line) (14 . anything-next-line) (menu-bar keymap \.\.\. \.\.\.) (10 . anything-select-3rd-action) (13 . anything-exit-minibuffer) (7 . anything-keyboard-quit) (C-tab . file-cache-minibuffer-complete) (9 . anything-select-action) (up . anything-previous-line) (prior . anything-previous-page) (down . anything-next-line) (next . anything-next-page) (27 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.)) (last-command . delete-backward-char) (migemo) (multiline)))
(setq-default anything-c-source-mark-ring '((name . "mark-ring") (init lambda nil (setq anything-mark-ring-cache \.\.\.)) (candidates lambda nil (anything-aif anything-mark-ring-cache it)) (action ("Goto line" lambda \.\.\. \.\.\.)) (persistent-action lambda (candidate) (anything-goto-line \.\.\.) (anything-match-line-color-current-line)) (persistent-help . "Show this line")))
(setq-default anything-c-source-minibuffer-history '((name . "Minibuffer History") (header-name lambda (name) (format "%s (%s)" name minibuffer-history-variable)) (candidates lambda nil (let \.\.\. \.\.\.)) (migemo) (action lambda (candidate) (delete-minibuffer-contents) (insert candidate))))
(setq-default anything-c-source-projects-history '((name . "Projects history") (candidates lambda nil ap:history) (action ("anything project" lambda \.\.\. \.\.\.))))
(setq-default command-history '((eval-region (region-beginning) (region-end)) (execute-extended-command nil "eval-region") (find-file "~/Dropbox/dotfiles/dot.emacs.d/site-lisp/ruby-mode.el" t) (kill-buffer "ruby-electric.el") (find-file "~/Dropbox/dotfiles/dot.emacs.d/ruby.el" t) (find-file "~/github/mina-railsapp/lib/mina/railsapp/unicorn.rb" t) (find-file "~/github/mina-railsapp/lib/mina/railsapp/nginx.rb" t) (query-replace "shared_path" "deploy_to" nil (if \.\.\. \.\.\.) (if \.\.\. \.\.\.)) (find-alternate-file "~/github/mina-railsapp/lib/mina/railsapp/unicorn.rb" t) (find-file "~/github/mina-railsapp/templates/unicorn.rb.erb" t) (find-file "~/github/mina-railsapp/templates" t) (find-file "~/github/TogoGenome/config/unicorn.rb" t) (find-file "~/tmp/togogenome.nginx.2" t) (find-file "~/tmp/togogenome.nginx.1" t) (find-file "~/tmp/togogenome.nginx" t) (find-file "~/github/TogoGenome/app/helpers/facets_helper.rb" t) (find-file "~/github/TogoGenome/app/views/proteins/_results.html.haml" t) (find-alternate-file "~/github/TogoGenome/app/views/root/index.html.haml" t) (find-file "~/github/TogoGenome/app/controllers/proteins_controller.rb" t) (find-file "~/github/TogoGenome/app/assets/stylesheets/application.css.sass" t) (find-file "~/github/TogoGenome/config/database.yml" t) (find-alternate-file "~/github/TogoGenome/config/database.yml.sample" t) (find-alternate-file "~/github/TogoGenome/Gemfile.lock" t) (find-file "~/github/TogoGenome/lib/tasks/protein.thor" t) (find-file "~/github/TogoGenome/lib/tasks/data.thor" t) (goto-line 48 nil) (find-alternate-file "~/github/TogoGenome/app/views/facets/_facet.html.haml" t) (find-file "~/github/TogoGenome/Gemfile" t) (find-file "~/github/TogoGenome/app/views/facets/_facet.html.haml" t)))
(setq-default extended-command-history '("eval-region" "auto-install-batch" "ruby-mode" "align-regexp" "shell" "shell-mode"))
(setq-default helm-c-source-ff-file-name-history '((name . "File name history") (init lambda nil (when helm-ff-file-name-history-use-recentf \.\.\. \.\.\.)) (candidates lambda nil (if helm-ff-file-name-history-use-recentf recentf-list file-name-history)) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" lambda \.\.\. \.\.\. \.\.\.) ("Find file in helm" lambda \.\.\. \.\.\.))))
(setq-default helm-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (type . file)))
(setq-default helm-c-source-global-mark-ring '((name . "global-mark-ring") (candidates . helm-global-mark-ring-get-candidates) (action ("Goto line" lambda \.\.\. \.\.\.)) (persistent-action lambda (candidate) (let \.\.\. \.\.\. \.\.\. \.\.\.)) (persistent-help . "Show this line")))
(setq-default helm-c-source-kill-ring '((name . "Kill Ring") (init lambda nil (helm-attrset \.\.\. last-command)) (candidates . helm-kill-ring-candidates) (filtered-candidate-transformer helm-kill-ring-transformer) (action ("Yank" . helm-kill-ring-action) ("Delete" lambda \.\.\. \.\.\.)) (keymap keymap (27 keymap \.\.\. \.\.\.) keymap (menu-bar keymap \.\.\.) (help keymap \.\.\.) (f1 keymap \.\.\.) (8 keymap \.\.\. \.\.\. \.\.\.) (20 lambda \.\.\. \.\.\. \.\.\.) (C-tab . undefined) (67108897 . helm-toggle-suspend-update) (3 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (67108987 . helm-enlarge-window) (67108989 . helm-narrow-window) (19 . undefined) (18 . undefined) (23 . helm-yank-text-at-point) (24 keymap \.\.\. \.\.\.) (11 . helm-delete-minibuffer-contents) (67108896 . helm-toggle-visible-mark) (C-M-up . helm-scroll-other-window-down) (C-M-down . helm-scroll-other-window) (M-prior . helm-scroll-other-window-down) (M-next . helm-scroll-other-window) (12 . helm-recenter-top-bottom-other-window) (15 . helm-next-source) (10 . helm-select-3rd-action) (5 . helm-select-2nd-action-or-end-of-line) (26 . helm-execute-persistent-action) (9 . helm-select-action) (13 . helm-exit-minibuffer) (left . helm-previous-source) (right . helm-next-source) (7 . helm-keyboard-quit) (22 . helm-next-page) (27 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (next . helm-next-page) (prior . helm-previous-page) (16 . helm-previous-line) (14 . helm-next-line) (up . helm-previous-line) (down . helm-next-line) keymap (18 . helm-minibuffer-history) (menu-bar keymap \.\.\.) (10 . exit-minibuffer) (13 . exit-minibuffer) (7 . abort-recursive-edit) (C-tab . file-cache-minibuffer-complete) (9 . self-insert-command) (XF86Back . previous-history-element) (up . previous-history-element) (prior . previous-history-element) (XF86Forward . next-history-element) (down . next-history-element) (next . next-history-element) (27 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.)) (last-command . end-of-buffer) (migemo) (multiline)))
(setq-default helm-c-source-mark-ring '((name . "mark-ring") (candidates . helm-mark-ring-get-candidates) (action ("Goto line" lambda \.\.\. \.\.\. \.\.\.)) (persistent-action lambda (candidate) (helm-goto-line \.\.\.) (helm-match-line-color-current-line)) (persistent-help . "Show this line")))
(setq-default helm-source-ff-file-name-history '((name . "File name history") (init lambda nil (when helm-ff-file-name-history-use-recentf \.\.\. \.\.\.)) (candidates lambda nil (if helm-ff-file-name-history-use-recentf recentf-list file-name-history)) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" lambda \.\.\. \.\.\. \.\.\.) ("Find file in helm" lambda \.\.\. \.\.\.))))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (type . file)))
(setq-default helm-source-global-mark-ring '((name . "global-mark-ring") (candidates . helm-global-mark-ring-get-candidates) (action ("Goto line" lambda \.\.\. \.\.\.)) (persistent-action lambda (candidate) (let \.\.\. \.\.\. \.\.\. \.\.\.)) (persistent-help . "Show this line")))
(setq-default helm-source-kill-ring '((name . "Kill Ring") (init lambda nil (helm-attrset \.\.\. last-command)) (candidates . helm-kill-ring-candidates) (filtered-candidate-transformer helm-kill-ring-transformer) (action ("Yank" . helm-kill-ring-action) ("Delete" lambda \.\.\. \.\.\.)) (keymap keymap (27 keymap \.\.\. \.\.\.) keymap (menu-bar keymap \.\.\.) (help keymap \.\.\.) (f1 keymap \.\.\.) (8 keymap \.\.\. \.\.\. \.\.\.) (20 lambda \.\.\. \.\.\. \.\.\.) (C-tab . undefined) (67108897 . helm-toggle-suspend-update) (3 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (67108987 . helm-enlarge-window) (67108989 . helm-narrow-window) (19 . undefined) (18 . undefined) (23 . helm-yank-text-at-point) (24 keymap \.\.\. \.\.\.) (11 . helm-delete-minibuffer-contents) (67108896 . helm-toggle-visible-mark) (C-M-up . helm-scroll-other-window-down) (C-M-down . helm-scroll-other-window) (M-prior . helm-scroll-other-window-down) (M-next . helm-scroll-other-window) (12 . helm-recenter-top-bottom-other-window) (15 . helm-next-source) (10 . helm-select-3rd-action) (5 . helm-select-2nd-action-or-end-of-line) (26 . helm-execute-persistent-action) (9 . helm-select-action) (13 . helm-exit-minibuffer) (left . helm-previous-source) (right . helm-next-source) (7 . helm-keyboard-quit) (22 . helm-next-page) (27 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (next . helm-next-page) (prior . helm-previous-page) (16 . helm-previous-line) (14 . helm-next-line) (up . helm-previous-line) (down . helm-next-line) keymap (18 . helm-minibuffer-history) (menu-bar keymap \.\.\.) (10 . exit-minibuffer) (13 . exit-minibuffer) (7 . abort-recursive-edit) (C-tab . file-cache-minibuffer-complete) (9 . self-insert-command) (XF86Back . previous-history-element) (up . previous-history-element) (prior . previous-history-element) (XF86Forward . next-history-element) (down . next-history-element) (next . next-history-element) (27 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.)) (last-command . end-of-buffer) (migemo) (multiline)))
(setq-default helm-source-mark-ring '((name . "mark-ring") (candidates . helm-mark-ring-get-candidates) (action ("Goto line" lambda \.\.\. \.\.\. \.\.\.)) (persistent-action lambda (candidate) (helm-goto-line \.\.\.) (helm-match-line-color-current-line)) (persistent-help . "Show this line")))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default query-replace-history '("deploy_to" "shared_path"))
(setq-default yes-or-no-p-history '("yes"))
